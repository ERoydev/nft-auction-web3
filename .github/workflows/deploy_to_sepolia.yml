name: Deploy to Sepolia and update Render environment variables

on:
  workflow_dispatch:  # allows manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry v1.1.0
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: v1.1.0
      
      - name: Run forge integration tests
        run: forge test --match-path "test/integration/*"

      - name: Set up environment variables
        run: |
          echo "PRIVATE_KEY=${{ secrets.PRIVATE_KEY }}" >> $GITHUB_ENV
          echo "SEPOLIA_RPC=${{ secrets.SEPOLIA_RPC }}" >> $GITHUB_ENV
          echo "INITIAL_ADMIN_ADDRESS=${{ secrets.INITIAL_ADMIN_ADDRESS }}" >> $GITHUB_ENV
          echo "PINATA_API_KEY_JWT=${{ secrets.PINATA_API_KEY_JWT }}" >> $GITHUB_ENV
          echo "PINATA_GATEWAY=${{ secrets.PINATA_GATEWAY }}" >> $GITHUB_ENV
          echo "BACKEND_URL=${{ secrets.BACKEND_URL }}" >> $GITHUB_ENV

      - name: Deploy contract to Sepolia
        run: |
          forge script script/DeploySepolia.s.sol:Deploy \
            --rpc-url $SEPOLIA_RPC \
            --private-key $PRIVATE_KEY \
            --broadcast \
            --verify 
#           --etherscan-api-key ${{ secrets.ETHERSCAN_API_KEY }}  # Optional for verification

      - name: Extract deployed contract addresses
        id: extract_addresses
        run: |
          BROADCAST_PATH="broadcast/DeploySepolia.s.sol/11155111/run-latest.json"

          NFT_ADDRESS=$(jq -r '.transactions[] | select(.contractName=="NFT") | .contractAddress' $BROADCAST_PATH)
          AUCTION_ADDRESS=$(jq -r '.transactions[] | select(.contractName=="EnglishAuction") | .contractAddress' $BROADCAST_PATH)

          echo "NFT_ADDRESS=$NFT_ADDRESS" 
          echo "AUCTION_ADDRESS=$AUCTION_ADDRESS" 

          echo "nft_address<<EOF" >> $GITHUB_OUTPUT
          echo "$NFT_ADDRESS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          echo "auction_address<<EOF" >> $GITHUB_OUTPUT
          echo "$AUCTION_ADDRESS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT


      - name: Update Render environment variables
        # Docs used: https://api-docs.render.com/reference/update-env-vars-for-service
        env: 
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID_FE }}
          INITIAL_ADMIN_ADDRESS: ${{ env.INITIAL_ADMIN_ADDRESS }}
          BACKEND_URL: ${{ env.BACKEND_URL }}
          NFT_ADDRESS: ${{ steps.extract_addresses.outputs.NFT_ADDRESS }}
          AUCTION_ADDRESS: ${{ steps.extract_addresses.outputs.AUCTION_ADDRESS }}
        run: |
          cat <<EOF > payload.json
          [
            { "key": "VITE_NFT_CONTRACT_ADDRESS", "value": "${NFT_ADDRESS}", "sync": true },
            { "key": "VITE_AUCTION_CONTRACT_ADDRESS", "value": "${AUCTION_ADDRESS}", "sync": true },
            { "key": "VITE_OWNER_OF_CONTRACTS", "value": "${INITIAL_ADMIN_ADDRESS}", "sync": true },
            { "key": "VITE_MARKETPLACE_NFT_OWNER", "value": "${INITIAL_ADMIN_ADDRESS}", "sync": true },
            { "key": "VITE_SEPOLIA_RPC", "value": "${SEPOLIA_RPC}", "sync": true },
            { "key": "VITE_PINATA_API_KEY_JWT", "value": "${PINATA_API_KEY_JWT}", "sync": true },
            { "key": "VITE_PINATA_GATEWAY", "value": "${PINATA_GATEWAY}", "sync": true },
            { "key": "VITE_BACKEND_URL", "value": "${BACKEND_URL}", "sync": true }
          ]
          EOF

          curl -X PUT "https://api.render.com/v1/services/${RENDER_SERVICE_ID}/env-vars" \
            -H "Authorization: Bearer ${RENDER_API_KEY}" \
            -H "Content-Type: application/json" \
            --data @payload.json
